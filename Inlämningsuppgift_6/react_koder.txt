
            AUTHORIZE: "https://accounts.spotify.com/authorize",
            redirect_uri: "http://127.0.0.1:5500/index.html",
            TOKEN: "https://accounts.spotify.com/api/token",


    requestAuth : function(){
      var client_id = "dcbf02535f98427eb6571752dceb9519";
    var client_secret = "406b1cb4843b44bea31cc8876bddb383";
    localStorage.setItem("client_id", client_id);
    localStorage.setItem("client_secret", client_secret); // In a real app you should not expose your client_secret to the user
      console.log(client_id)
    let url = this.state.AUTHORIZE;
    url += "?client_id=" + client_id;
    url += "&response_type=code";
    url += "&redirect_uri=" + encodeURI(this.state.redirect_uri);
    url += "&show_dialog=true";
    url += "&scope=user-read-private user-read-email user-modify-playback-state user-read-playback-position user-library-read streaming user-read-playback-state user-read-recently-played playlist-read-private";
    window.location.href = url;
    },
    getToken : async function(){
      let code = null;
    const queryString = window.location.search;
    if ( queryString.length > 0 ){
        const urlParams = new URLSearchParams(queryString);
        code = urlParams.get('code')
    }
      let body = "grant_type=authorization_code";
    body += "&code=" + code; 
    body += "&redirect_uri=" + encodeURI(this.state.redirect_uri);
    body += "&client_id=" + "dcbf02535f98427eb6571752dceb9519";
    body += "&client_secret=" + "406b1cb4843b44bea31cc8876bddb383";
        const response = await fetch(this.state.TOKEN, {
          method: 'POST',
          headers: {
            'Content-Type' : 'application/x-www-form-urlencoded', 
            'Authorization' : 'Basic ' + btoa('dcbf02535f98427eb6571752dceb9519' + ':' + '406b1cb4843b44bea31cc8876bddb383')
        },
        body: body
        })
        const data = await response.json()
        console.log(data.access_token)
        this.getGenres(data.access_token)
    },
    getGenres: async function(token){
        const response = await fetch(`https://api.spotify.com/v1/tracks/2TpxZ7JUBn3uw46aR7qd6V`, {
          method: 'GET',
            headers: { 
              'Content-Type': 'application/json',
              'Authorization' : 'Bearer ' + token}
        })
        const data = response.json()
        const genres = await data
        console.log(genres)
    },
	
	
    testAsmx: function (){
      fetch("https://sridurgayadav-chart-lyrics-v1.p.rapidapi.com/apiv1.asmx/SearchLyricDirect?artist=eminem&song=bad", {
	method: "GET",
	headers: {
		"x-rapidapi-host": "sridurgayadav-chart-lyrics-v1.p.rapidapi.com",
		"x-rapidapi-key": "3f3f74516fmsh8cf9ff09a711182p19bc6ajsn783d8c33547e"
	}
})
.then((response)=> {
	return response.text()
})
.then((data) => {
  //console.log(data)
  const parser = new DOMParser();
    const xml = parser.parseFromString(data, "text/xml");
    let tracks = xml.querySelector("GetLyricResult");
    //let track = tracks.querySelector("track")
    console.log(tracks)
})
.catch(err => {
	console.error(err);
});
    },
    testXml: function(){
         fetch("http://api.chartlyrics.com/apiv1.asmx/GetLyric?lyricId=1710&lyricCheckSum=8a84ddec06f4fffe067edd2fdbece21b", {
	method: "GET",
  mode: "no-cors",
	headers: {
	  "Accept": "text/plain",
		"Content-Type": "text/plain; charset=utf-8"
	}
})
  .then((response) =>{
    const parser = new DOMParser();
    const xml = parser.parseFromString(response.text(), "text/html");
    let tracks = xml.querySelectorAll("GetLyricResult");
    //let track = tracks.querySelector("track")
    console.log(tracks)
  })
  .catch(console.error);
    },
	
<select name="types" id="types" value={activeItem.types} onChange={onChange}>
                    <option value="movie">Movie</option>
                    <option value="series">Series</option>
                    <option value="episode">Episode</option>
                  </select>